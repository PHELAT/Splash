task codeCoverageReport(type: JacocoReport, dependsOn: ['test']) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def javaClasses = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def kotlinClasses = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def kotlinClassesTwo = fileTree(dir: "$project.buildDir/classes/kotlin/", excludes: fileFilter)
    def javaSrc = "$project.projectDir/src/main/java"
    def kotlinSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories = files([javaSrc, kotlinSrc])
    classDirectories = files([javaClasses, kotlinClasses, kotlinClassesTwo])

    reports {
        xml.enabled true
        xml.destination file("${rootProject.buildDir}/reports/jacoco/${project.name}/report.xml")
        html.enabled true
        html.destination file("${rootProject.buildDir}/reports/jacoco/${project.name}/htmlReport")
        csv.enabled false
    }
}

assemble.dependsOn "codeCoverageReport"